variables:
  FLASK_APP: loki
  FLASK_DEBUG: 1
  FLASK_ENV: Local
  POSTGRES_PASSWORD: d0nt4get
  POSTGRES_USER: loki
  POSTGRES_DB: loki
  POSTGRES_TEST_DB: loki_test

stages:
  - test
  - build
  - deploy

integration-test:
  stage: test
  image: python:3.7-alpine
  variables:
    FLASK_ENV: Testing
    ENV: Testing
    DATABASE_TEST_URL: postgresql://loki:d0nt4get@127.0.0.1:5432/loki_test
  script:
    - pip install -r requirements/test.txt
    - python -m unittest discover -s ./loki/tests -p '*_tests.py'
  services:
    - name: postgres:10.6
  except:
    - develop
    - master
  tags:
    - k8s

e2e-test:
  stage: test
  script:
    - echo "Testing everything!!! Boooo!!!"
  only:
    - /^release\/.*$/
  tags:
    - k8s-accept

publish-docker-image-dev:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - export DOCKER_HOST=tcp://localhost:2375
    - docker login -u $DOCKER_USER -p $DOCKER_PASS docker-builds.yellitech.io
  script:
    - docker build -f Dockerfile --build-arg BUILD_ID=$CI_JOB_ID --build-arg BUILD_NUMBER=$CI_PIPELINE_ID --build-arg BUILD_TAG=$CI_COMMIT_TAG --build-arg GIT_COMMIT=$CI_COMMIT_SHA -t docker-builds.yellitech.io/loki-id-verification-service:$CI_COMMIT_SHA -t docker-builds.yellitech.io/loki-id-verification-service:latest .
    - docker push docker-builds.yellitech.io/loki-id-verification-service
  only:
    - develop
  tags:
    - k8s

deploy-dev:
  stage: deploy
  image: dtzar/helm-kubectl
  before_script:
    - mkdir ~/.kube
    - echo $KUBE_CONFIG | base64 -d > ~/.kube/config
    - kubectl config use-context deployer-dev-context
    - helm init --client-only
  script:
    - echo $VALUES_DEV | base64 -d > ./values.yaml
    - helm upgrade -f ./values.yaml --set image.tag=$CI_COMMIT_SHA loki ./helm
  only:
    - develop
  tags:
    - k8s

publish-docker-image-accept:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - export DOCKER_HOST=tcp://localhost:2375
    - docker login -u $DOCKER_USER -p $DOCKER_PASS docker-builds.yellitech.io
  script:
    - export DOCKER_IMAGE_TAG=$(echo $CI_COMMIT_REF_NAME | cut -d '/' -f 2)
    - docker build -f Dockerfile --build-arg BUILD_ID=$CI_JOB_ID --build-arg BUILD_NUMBER=$CI_PIPELINE_ID --build-arg BUILD_TAG=$CI_COMMIT_TAG --build-arg GIT_COMMIT=$CI_COMMIT_SHA -t docker-builds.yellitech.io/loki-id-verification-service:$DOCKER_IMAGE_TAG .
    - docker push docker-builds.yellitech.io/loki-id-verification-service
  only:
    - /^release\/.*$/
  tags:
    - k8s-accept

deploy-accept:
  stage: deploy
  image: dtzar/helm-kubectl
  before_script:
    - mkdir ~/.kube
    - echo $KUBE_CONFIG_ACCEPT | base64 -d > ~/.kube/config
    - kubectl config use-context deployer-accept
    - helm init --client-only
  script:
    - echo $VALUES_ACCEPT | base64 -d > ./values.yaml
    - export DOCKER_IMAGE_TAG=$(echo $CI_COMMIT_REF_NAME | cut -d '/' -f 2)
    - helm upgrade -f ./values.yaml --set image.tag=$DOCKER_IMAGE_TAG loki ./helm
  only:
    - /^release\/.*$/
  tags:
    - k8s-accept
